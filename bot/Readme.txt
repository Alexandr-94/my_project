Это мой первый прект по разраотке бота который предаставляет курс валюты по запросу.
Функции которые уже работают.
1. Запрос по API беларусьбанка.
2. Извлечение из API курса 3-х валют(USD,EUR,RUB), а так же их конверсия.
3. Создание бота и передача токена для работы в телеграм.
4. Логика запроса у бота курса валют, start, после чего приходит сообщение и появляются кнопки ДА, НЕТ.
5. При выборе ДА, происходит переход в функцию где выводятся 3 виртуальные кнопки (Продажа, Покупка, Конверсия)
6. При выборе НЕТ.
Функционал который в дальнейшем хочу осуществить!
1. Добавить большее количество банков и соответственно их текущий курс валют (если у банка есть API).
2. Добавить конвертер валют.(Вданный момент над ним раотаю, но есть вопросы)
3. Привязать базу данных и сделать, что то личной выборки банков, и интересующих валют.
4. Разместить на хостинге.

Библиотеки которые используются в проекте.
1. requests.
2. telebot.
3. json.
4. datetime.

Установка библиотеки в терменале, команда "py -m pip install requests"

Подробнее по функциям и коду в проекте.
1. API
Используется библиотека requests
s = requests.Session()
r = s.get(f'https://belarusbank.by/api/kursExchange?city={city.title()}')  тут же помещен API банка
r = json.loads(r.text)
- код из файла в котором s это обьект запроса в который мы помещаем ссылку запроса, после переводим в Json формат из
 котороко мы можем уже извлекать необходимую нам информацию. (тип данных словарь!"dict")
 сслылка на онлайн преобразователь Json формата http://jsonviewer.stack.hu/

- более подробная информация по API находится на сайте беларусьбанка https://belarusbank.by/ru/33139/forDevelopers/api/kursinfo

2. Извлечение необходимой информации происходит при помощи функции и передачи в её необходимых аргументов.
Функция get_exchange_rates_conversion выводит Конверсия.
Функция def get_exchange_rates выводит курс.
def get_exchange_rates(currencies: list, direstion: str, city: str) -> str:
if __name__ == '__main__':
    get_exchange_rates(['usd', 'eur', 'rub'], 'out', 'минск')

- Такой же процес с конверсией в спосок помещаем необходимый запросы по ключу,
информация какой необходим ключ есть на сайте банка

3. Создание бота.
- Про создание бота можно почитать на официальном сайте телеграм,
там все пошагово описано ссылка на сайт https://core.telegram.org/bots

- После создания бота в ТГ мы получаем индивидуальный токен нашего бота, после мы должны в нашем файле установить
библиотеку telebot и активировать бот в нашем коде, передачей токена в переменную.
bot = telebot.TeleBot(token)

4. Логика запроса.
- Дляначала нам необходимо прописать команду @bot.message_handler(commands=['start']), эта команда позваляет нам
принимать сообщения от пользователя и в дальнейшем обрабатывать их.

- Команда bot.send_message(message.from_user.id) позваляет нам отправлять сообщение пользователю.

- Создание кнопок происходите по комане keyboard = telebot.types.ReplyKeyboardMarkup(True), и дальше в переменной
keyboard.row('Да', 'Нет') мы делаем название кнопок.

- Больше подробной инхормация по телеботу можно прочесть на сайте ://core.telegram.org/bots/api#recent-changes

5. Логика бработки ДА.
- При нажатии кнопки ДА мы переходим в функцию get_text_messages в котором происходит активация вертуальных кнопо.
(Продажа, Покупка, Конверсия)

- Активация виртульныъх копок происходит при команде keyboard = types.InlineKeyboardMarkup(), более подробную информацию
можно почитать на сайте https://core.telegram.org/bots/api#inlinekeyboardbuttonhttps

- После выбора виртуальных кнопак код обращается к функциям с API в которых берет необходимую информацию
и выводит еёпользователю

6. Логика бработки НЕТ.
- Просто отвечаем чаем текстом пользователю.


Сайты с информацией.
Json
https://python-scripts.com/json#json-vocabulary
requests
https://docs.python-requests.org/en/latest/
telebot
https://core.telegram.org/bots/api#recent-changes
API
https://belarusbank.by/ru/33139/forDevelopers/api/kursinfo
